//Problema 1

import java.util.Arrays;

public class Coada {

    private int[] v;
    private int numarElementeCoada;

    public Coada() {
        v=new int[100];
        numarElementeCoada=0;
    }

    public Coada(int dimensiune) {
        v=new int[100];
        numarElementeCoada=dimensiune;
    }

    public void push(int elementNou) {
        v[numarElementeCoada]=elementNou;
        numarElementeCoada++;
    }

    public int pop() {
        int val=v[0];
        for(int i=0;i<numarElementeCoada-1;i++)
            v[i]=v[i+1];
        v[numarElementeCoada-1]=0;
        numarElementeCoada-=1;
        return val;
    }

    public boolean isEmpty() {
        if(numarElementeCoada==0) return true;
        else return false;
    }

    public String toString() {
        int []k=new int[numarElementeCoada];
        for(int i=0;i<numarElementeCoada;i++)
            k[i]=v[i];
        return "Coada{" +
                "v=" + Arrays.toString(k) +
                ", numarElementeCoada=" + numarElementeCoada +
                '}';
    }

    public static void main(String[] args) {
        Coada C=new Coada(5);
        C.push(5);
        C.push(8);
        System.out.println( C.toString());
        System.out.println(C.pop());
        System.out.println( C.toString());
        System.out.println(C.isEmpty());
        Coada D=new Coada();
        System.out.println(D.isEmpty());
    }
}

//////////////////////////////////////////////////////////////////////


//Problema 2

public class Problema2 {
	
	public static boolean simetric(int [][]a) {
		boolean ok=true;
		int n,m;
		n=a.length;
		m=a[0].length;
		if(n==m) {
		for(int i=0;i<n&&ok==true;i++)
			for(int j=0;j<m&&ok==true;j++)
				if(a[i][j]!=a[j][i])
					ok=false;
	
		return ok;
		}
		else return false;
	}
	
	public static void main (String[] args) {
		int [][]a= {{1,7,3},{7,4,-5},{3,-5,6}};
		int [][]b= {{1,8,3},{7,4,-5},{3,-5,6}};
		System.out.println(simetric(a));
		System.out.print(simetric(b));


}
}

//////////////////////////////////////////////////////////////////////


//Problema3

import java.util.Arrays;

public class Matrice {

    private int[][] a;
    private int n,m;

    public Matrice() {
        a=new int[100][100];
        n=3;
        m=2;
    }

    public Matrice(int n2,int m2, int h) {
        a=new int[100][100];
        n=n2;
        m=m2;
        for(int i=0;i<n2;i++)
            for(int j=0;j<m2;j++) {
                a[i][j]=h;
                h++;
            }
    }

    Matrice add (Matrice m2) {
        Matrice rez=new Matrice(n,m,0);
        rez.n=n;
        rez.m=m;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                rez.a[i][j]=a[i][j]+m2.a[i][j];

        return rez;
    }

    Matrice multiply(Matrice m2) {
        int sum=0;
        Matrice rez=new Matrice();
        if(n==m2.m || m==m2.n) {
            rez.n=m;
            rez.m=m2.n;
            for (int i = 0; i < m2.n; i++) {
                for (int j = 0; j < m; j++) {
                    for (int k = 0; k < n; k++) {
                        sum = sum + m2.a[i][k]*a[k][j];
                    }
                    rez.a[i][j] = sum;
                    sum = 0;
                }
            }

        }
        else System.out.println("Dimensiunile NU corespund!");
        return rez;
    }
    Matrice pow(int pow) {
        Matrice rez=new Matrice(n,m,0);

        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                rez.a[i][j]=a[i][j];

        for(int i=0;i<pow-1;i++)
            rez=rez.multiply(this);

        return rez;
    }

    public String toString() {
       int []v=new int[n*m];
       int k=0;
        for(int i=0;i<n;i++) {
            for(int j=0;j<m;j++){
                v[k]=a[i][j];
                k++;
            }
        }
        return "Matrice{" +
                "a=" + Arrays.toString(v) +
                ", n=" + n +
                ", m=" + m +
                '}';
    }

    public static void main(String []args) {
        Matrice m2=new Matrice(2,3,1);
        Matrice curenta=new Matrice(3,2,1);
        Matrice inmultire=curenta.multiply(m2);
        System.out.println(inmultire.toString());

        Matrice X=new Matrice(2,3,1);
        Matrice Y=new Matrice(2,3,2);
        Matrice adunare=Y.add(X);
        System.out.println(adunare.toString());

        Matrice Z=new Matrice(2,2,1);
        Matrice putere=Z.pow(3);
        System.out.println(putere.toString());
    }
}

/////////////////////////////////////////////////////////////////////////////////


//Problema 4

public class Maximum {

    public int numar;
    public int maxim(int a){
        if(a>numar) return a;
        else return numar;
    }

    public int maxim(int a, int b){
        int y;
        Maximum X=new Maximum();
        X.numar=a;

        y=X.maxim(b);
        X.numar=y;
        return X.maxim(numar);
    }

    public int maxim(int a, int b,int c){
        Maximum X=new Maximum();
        X.numar=a;
        X.numar=X.maxim(b,c);
        return X.maxim(numar);

    }

    public int maxim(int a, int b, int c, int d){

        Maximum X=new Maximum();
        X.numar=a;
        X.numar=X.maxim(b,c,d);
        return X.maxim(numar);
    }


    public static void main(String[] args) {
        Maximum X=new Maximum();
        X.numar=1;
        System.out.println(X.maxim(2));
        X.numar=4;
        System.out.println(X.maxim(2,3));
        X.numar=4;
        System.out.println(X.maxim(5,3,4,2));
        X.numar=4;
        System.out.println(X.maxim(9,3,1,8));
    }
}

/////////////////////////////////////////////////////////////////////////////////////

//Problema 5

public class Complex {

    double real,img;
    public Complex(double x, double y){
        real=x;
        img=y;
    }

    public Complex(){
        this(0,0);
    }

    public Complex suma(Complex X){
        Complex Y=new Complex();
        Y.img=X.img+img;
        Y.real=X.real+real;
        return  Y;
    }

    public String toString() {
        return "Complex{" +
                "real=" + real +
                ", img=" + img +
                '}';
    }

    public boolean equals(Complex X){
        if(X.real==real&&X.img==img) return true;
        else return false;
    }


    public static void main(String[] args) {
        Complex X=new Complex(4,5.4);
        Complex Y=new Complex(8,1.5);
        Complex K=new Complex(12,6.9);
        Complex Z=new Complex();
        Z=X.suma(Y);
        System.out.println(Z.toString());
        System.out.println(Z.equals(K));
        System.out.println(Z.equals(X));
    }
}

//////////////////////////////////////////////////////////////////////////////////

//Problema 6

package com.geometry;
import java.lang.Math;
class TestPunct {
    public TestPunct() {
        Punct A = new Punct(1, 3);
        Punct B = new Punct(-1, 2);
        System.out.println(A.distance(B));
    }
}
public class Punct {

    private int x,y;

    public Punct(){
        x=0;
        y=0;
    }

    public Punct(int a, int b){
        x=a;
        y=b;
    }

    public int getX(){
        return x;
    }

    public void setX(int a){
        x=a;
    }

    public int getY(){
        return y;
    }

    public void setY(int a){
        y=a;
    }

    public String toString() {
        return "Punct{" +
                "x=" + x +
                ", y=" + y +
                '}';
    }

    public double distance(int a,int b){
        return Math.sqrt((a-x)*(a-x) + (b-y)*(b-y));
    }

    public double distance(Punct p1){
        return Math.sqrt((p1.x-x)*(p1.x-x) + (p1.y-y)*(p1.y-y));
    }


    public static void main(String[] args) {
        TestPunct T;
        T=new TestPunct();
    }
}
///////////////////////////  SAU

class TestPunct {
    public TestPunct() {
        Punct A = new Punct(1, 3);
        Punct B = new Punct(-1, 2);
        System.out.println(A.distance(B));
    }
    public static void main(String[] args) {
        TestPunct T;
        T=new TestPunct();
    }
}
///////////////////////////////////////////////////////////////////////////////

//Problema 7

class Produs {

    private String nume;
    private double pret;
    private int cantitate;
    public Produs(String nume2,double pret2, int cantitate2){
        nume=nume2;
        pret=pret2;
        cantitate=cantitate2;
    }

    public String toString() {
        return "Produs{" +
                "nume='" + nume + '\'' +
                ", pret=" + pret +
                ", cantitate=" + cantitate +
                '}';
    }

    public double getTotalProdus(){
        return cantitate*pret;
    }

}

public class Magazin {


    private String nume;
    private Produs A;
    private  Produs B;
    private  Produs C;

    public Magazin(String nume2){
        nume=nume2;
        A=new Produs("Lapte",4.2,12);
        B=new Produs("Paine",2.1,45);
        C=new Produs("Iaurt",6.2,10);
    }

    public String toString() {
        return "Magazin{" +
                "nume='" + nume + '\'' +
                ", A=" + A +'\n'+
                ", B=" + B + '\n' +
                ", C=" + C +
                '}';
    }

    public double getTotalMagazin() {
        return A.getTotalProdus()+B.getTotalProdus()+C.getTotalProdus();
    }

    public static void main(String[] args) {

        Magazin M=new Magazin("Lidl");
        System.out.println(M.toString());
        System.out.println(M.getTotalMagazin());

    }

}

///////////////////////////////////////////////////////////////////////////////////

//Problema 8


public class Student {

    private String nume;
    private String prenume;
    static int contor= 0;

    public Student(int k){
        nume="Ion"+k;
        prenume="Anton"+k;
        contor++;
    }

    public void afisare() {

        System.out.println( "Student{" +
                "nume='" + nume + '\'' +
                ", prenume='" + prenume + '\'' +
                '}');


    }

    public static void main(String[] args) {
        Student S1=new Student(1);
        Student S2=new Student(2);
        Student S3=new Student(3);
        Student S4=new Student(4);
        Student S5=new Student(5);
        Student []S=new Student[5];
        S[0]=S1;
        S[1]=S2;
        S[2]=S3;
        S[3]=S4;
        S[4]=S5;

    for(int i=0;i<5;i++)
        S[i].afisare();

    System.out.println(Student.contor);
}
}
////////////////////////////////////////////////////////////////////////////////////

//Problema 9

import java.util.Arrays;

public class Arr {
    

    public void metoda(int element,int []v){
        int ok=0,lungime=0;
        int []v2=new int[100];
        System.out.println(Arrays.toString(v));
        for(int i=0;i<v.length;i++) {
            if(v[i]==element&&ok==0){
                v2[lungime]=v[i];
                lungime++;
                ok=1;
            }
            else if(ok==1){
                v2[lungime]=v[i];
                lungime++;
            }

        }
        for(int i=0;i<lungime;i++)
            System.out.print(v2[i]+" ");
    }

    public static void main(String[] args) {
        Arr S=new Arr();
        int arr[] = { 1, 5, 6, 9, 12 ,22 ,7 ,20 };
        int item = 9;
        S.metoda(item,arr);

}

}

////////////////////////////////////////////////////////////////////////////////////////


//Problema 10

package com.Scoala;

class Student {

    private String nume;
    private double medieSem1;
    private double medieSem2;

    public Student(){
        nume="Ion";
        medieSem1=8.5;
        medieSem2=7.9;
    }

    public String toString() {
        return "Student{" +
                "nume='" + nume + '\'' +
                ", medieSem1=" + medieSem1 +
                ", medieSem2=" + medieSem2 +
                '}';
    }

    public double getMedieAn1() {
        return (medieSem1+medieSem2)/2;
    }
}

public class Catalog{

    private String grupa;

    Student []A=new Student[5];
    public Catalog() {
        for (int j = 0; j < 5; j++)
            A[j] = new Student();
    }
    public double getMedieClasa(){
        double k=0;
        for(int i=0;i<5;i++)
            k+=A[i].getMedieAn1();
        return k/5;
    }

    public static void main(String[] args) {
        Catalog C=new Catalog();
        System.out.println(C.getMedieClasa());
        
}

}